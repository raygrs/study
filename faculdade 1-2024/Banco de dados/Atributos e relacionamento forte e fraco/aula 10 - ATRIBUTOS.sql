CREATE DATABASE aula10;
USE aula10;

/* TIPOS DE ATRIBUTOS

	* ATRIBUTO É A COLUNA
	* ATRIBUTO IDENTIFICADOR: PRIMARY KEY,
	* ATRIBUTO DERIVADO: SÃO ATRIBUTOS QUE VEM DE A PARTIR DE OUTRO COMPO, COMO POR EXEMPLO A IDADE QUE É DERIVADA DA DATA DE NASCIMENTO
    * ATRIBUTO SIMPLES: bairro, nome
    * ATRIBUTO COMPOSTO: SÃO DADOS DIFERENTES QUE JUNTOS FORMAM UMA INFORMAÇÃO COMPOSTA E DEVE SER DIVIDO EM SUBPARTES COMO O ENDEREÇO
			O ENDEREÇO DEVE SER SUBDIVIDIDO EM TRÊS CAMPOS CEP, NUMERO, COMPLEMENTO
			O TELEFONE PODE SER SUBDIVIDIDO EM DDI, DDD, PREFIXO, SUFIXO,
            ATÉ MESMO O EMAIL PODE SER COMPOSTO POIS SÃO DIVIDIDOS ENTRE USER NAME E DOMINIO 
            
	* ATRIBUTO MONOVALORADO: SÃO ATRIBUTOS QUE PODEM TER SOMENTE UM VALOR, COMO POR EXEMPLO BAIRRO,DTNASC
    * ATRIBUTO MULTIVALORADOS: SÃO ATRIBUTOS QUE PODEM TER VÁRIOS VALORES QUE REPRESENTA AS MESMAS COISAS, EXEMPLO O EMAIL
			POSSO TER DIVERSOS EMAILS MAS AMBOS SÃO EMAILS , TELEFONES
            
	* ATÉ DOIS ATRIBUTOS DEIXA NA MESMA TABELA, MAIS QUE DOIS CRIA UMA NOVA TABELA 
    
    
    * ENTIDADE FORTE -> ELA TEM UMA PRIMARY KEY SIMPLES, ELA NÃO DEPENDE DE NENHUMA OUTRA TABELA
			- LINHA TRACEJADA 
    
    * ENTIDADE FRACA -> ELA VAI TER A PRIMARY KEY COMPOSTA PELO ID E PELA FK, ELA DEPENDE DE UMA OUTRA TABELA, SEM ELA EU NÃO EXISTO 
		- ESSA TABELA SÓ VAI PODER EXISTIR SE HOUVER UMA FK
        - LINHA CHEIA 
*/

SELECT timestampdiff(YEAR, '2004-11-04', NOW()) idade;
SELECT timestampdiff(DAY, '2004-11-04', NOW()) idade;


-- ENTIDADDE FORTE 

CREATE TABLE funcionario(
idFuncionario INT PRIMARY KEY AUTO_INCREMENT,
nome VARCHAR(45),
cep CHAR(9),
numEnd VARCHAR(45),
complemento VARCHAR(45),
telCelular VARCHAR(45),
telFixo VARCHAR(45)
) AUTO_INCREMENT = 100;

INSERT INTO funcionario VALUES 
(default, 'Rayane', '05883-260', '335', 'ao lado do sasf', '11 97029-8460', '11 2771-5712'),
(default, 'Jeane', '05883-262', '334', null , '11 97029-8467', '11 2771-5710');

-- ENTIDADE FRACA 

CREATE TABLE Dependente (
idDep INT,
fkFuncionario INT,
CONSTRAINT fkDependente_funcionario foreign key (fkFuncionario) references funcionario (idFuncionario),
constraint pkComposta primary key (idDep, fkFuncionario),
nome VARCHAR(45),
parentesco VARCHAR(45),
dtNasc DATE
);

INSERT INTO Dependente VALUES 
(1, 100, 'Scott', 'filho', '2019-08-26'),
(2 , 101, 'Igor', 'filho', '2007-11-30'),
(3, 101, 'Ruan', 'filho', '2006-12-09');


SELECT * FROM DEPENDENTE;


SELECT funcionario.nome AS Parente,
dependente.nome AS Dependente 
From funcionario join dependente 
	on funcionario.idFuncionario = dependente.fkFuncionario;
    
    -- EXIBIR TODOS OS FUNCIONARIOS E SEUS RESPECTIVES DEPENDEDNTES INCLUSIVE OS FUNCIONARIO SEM DEPENDENTES
    
    -- LEFT JOIN -> PEGA A TABELA DA ESQUERDA
    -- RIGTH JOIN -> PEGA A TABELA DA DIREITA
    
    
    
    SELECT funcionario.nome AS Parente,
dependente.nome AS Dependente 
From dependente left join  funcionario
	on funcionario.idFuncionario = dependente.fkFuncionario;